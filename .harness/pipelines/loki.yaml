pipeline:
    name: loki
    identifier: loki
    allowStageExecutions: true
    projectIdentifier: deploy
    orgIdentifier: default
    tags: {}
    stages:
        - stage:
              name: loki
              identifier: loki
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: loki
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: loki
                                        type: HelmChart
                                        spec:
                                            store:
                                                type: Http
                                                spec:
                                                    connectorRef: account.grafanahelm
                                            chartName: loki-stack
                                            chartVersion: <+input>
                                            helmVersion: V3
                                            skipResourceVersioning: false
                  infrastructure:
                      environmentRef: staging
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.kubernetesconnector
                              namespace: loki
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: true
                  execution:
                      steps:
                          - step:
                                type: ShellScript
                                name: create ns
                                identifier: create_ns
                                spec:
                                    shell: Bash
                                    onDelegate: true
                                    source:
                                        type: Inline
                                        spec:
                                            script: kubectl create ns logging
                                    environmentVariables: []
                                    outputVariables: []
                                    executionTarget: {}
                                timeout: 10m
                                failureStrategies: []
                          - step:
                                name: Stage Deployment
                                identifier: stageDeployment
                                type: K8sBlueGreenDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                                when:
                                    stageStatus: All
                                failureStrategies: []
                          - step:
                                name: Swap primary with stage service
                                identifier: bgSwapServices
                                type: K8sBGSwapServices
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Swap primary with stage service
                                identifier: rollbackBgSwapServices
                                type: K8sBGSwapServices
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
    properties:
        ci:
            codebase:
                connectorRef: account.GithubConnector
                build: <+input>
